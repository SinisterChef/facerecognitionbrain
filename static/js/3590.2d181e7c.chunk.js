"use strict";(self.webpackChunkfacerecognitionbrain=self.webpackChunkfacerecognitionbrain||[]).push([[3590],{3590:(t,i,n)=>{n.d(i,{ExternalLighter:()=>s});var o=n(4409),a=n(2557),e=n(8138);class s extends o.sJ{constructor(t){super(t)}clear(){}init(){}async interact(){const t=this.container,i=t.actualOptions,n=t.interactivity;if(!i.interactivity.events.onHover.enable||"pointermove"!==n.status)return;const o=n.mouse.position;o&&(t.canvas.draw((i=>{(0,a.tM)(t,i,o)})),await Promise.resolve())}isEnabled(t){var i;const n=this.container,e=n.interactivity.mouse,s=null!==(i=null===t||void 0===t?void 0:t.interactivity)&&void 0!==i?i:n.actualOptions.interactivity,r=s.events;if(!r.onHover.enable||!e.position)return!1;const l=(0,o.hn)(a.EF,r.onHover.mode);if(l&&s.modes.light){const t=s.modes.light.area.gradient;n.canvas.mouseLight={start:(0,o.BN)(t.start),stop:(0,o.BN)(t.stop)}}return l}loadModeOptions(t){t.light||(t.light=new e.v);for(var i=arguments.length,n=new Array(i>1?i-1:0),o=1;o<i;o++)n[o-1]=arguments[o];for(const a of n)t.light.load(null===a||void 0===a?void 0:a.light)}reset(){}}},2557:(t,i,n)=>{n.d(i,{EF:()=>c,No:()=>h,tM:()=>d});var o=n(4409);const a={max:1,min:0},e=.5*Math.PI,s=2*Math.PI,r=.25*Math.PI,l=0,c="light";function d(t,i,n){var e;const r=null===(e=t.actualOptions.interactivity.modes.light)||void 0===e?void 0:e.area;if(!r)return;i.beginPath(),i.arc(n.x,n.y,r.radius,l,s);const c=i.createRadialGradient(n.x,n.y,l,n.x,n.y,r.radius),d=t.canvas.mouseLight;null!==d&&void 0!==d&&d.start&&d.stop&&(c.addColorStop(a.min,(0,o.xx)(d.start)),c.addColorStop(a.max,(0,o.xx)(d.stop)),i.fillStyle=c,i.fill())}function h(t,i,n,a){var l;const c=n.getPosition(),d=null===(l=t.actualOptions.interactivity.modes.light)||void 0===l?void 0:l.shadow;if(!d)return;const h=n.lightShadow;if(!h)return;const v=n.getRadius(),u=n.sides,y=s/u,f=-n.rotation+r,g=[];for(let o=0;o<u;o++)g.push({x:c.x+v*Math.sin(f+y*o)*1,y:c.y+v*Math.cos(f+y*o)*1});const x=[],p=d.length;for(const o of g){const t=Math.atan2(a.y-o.y,a.x-o.x),i={x:o.x+p*Math.sin(-t-e),y:o.y+p*Math.cos(-t-e)};x.push({end:i,start:o})}const m=(0,o.xx)(h);for(let o=x.length-1,e=0;o>=0;e=o--)i.beginPath(),i.moveTo(x[o].start.x,x[o].start.y),i.lineTo(x[e].start.x,x[e].start.y),i.lineTo(x[e].end.x,x[e].end.y),i.lineTo(x[o].end.x,x[o].end.y),i.fillStyle=m,i.fill()}}}]);
//# sourceMappingURL=3590.2d181e7c.chunk.js.map