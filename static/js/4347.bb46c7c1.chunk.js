"use strict";(self.webpackChunkfacerecognitionbrain=self.webpackChunkfacerecognitionbrain||[]).push([[4347],{4347:(o,e,i)=>{i.d(e,{drawCog:()=>g,drawCogHole:()=>d});var n=i(4409);const a=2,t=Math.PI*a,c=0,r={x:0,y:0},s=.005;function d(o){const{context:e,particle:i,radius:a}=o;if(void 0===i.cogHoleRadius||void 0===i.cogInnerRadius||void 0===i.cogInnerTaper||void 0===i.cogNotches||void 0===i.cogOuterTaper)return;const s=a*i.cogHoleRadius/n.a5;e.globalCompositeOperation="destination-out",e.beginPath(),e.moveTo(s,r.y),e.arc(r.x,r.y,s,c,t),e.closePath(),e.fill(),e.globalCompositeOperation="source-over"}function g(o){const{context:e,particle:i,radius:c}=o;if(void 0===i.cogHoleRadius||void 0===i.cogInnerRadius||void 0===i.cogInnerTaper||void 0===i.cogNotches||void 0===i.cogOuterTaper)return;const r=t/(i.cogNotches*a),d=r*i.cogInnerTaper*s,g=r*i.cogOuterTaper*s,u=c*i.cogInnerRadius/n.a5;let l=r,h=!1;for(e.moveTo(c*Math.cos(g),c*Math.sin(g));l<=t;l+=r)h?(e.lineTo(u*Math.cos(l-d),u*Math.sin(l-d)),e.lineTo(c*Math.cos(l+g),c*Math.sin(l+g))):(e.lineTo(c*Math.cos(l-g),c*Math.sin(l-g)),e.lineTo(u*Math.cos(l+d),u*Math.sin(l+d))),h=!h}}}]);
//# sourceMappingURL=4347.bb46c7c1.chunk.js.map