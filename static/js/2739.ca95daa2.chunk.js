"use strict";(self.webpackChunkfacerecognitionbrain=self.webpackChunkfacerecognitionbrain||[]).push([[2739],{2739:(e,a,s)=>{function u(e,a,s){const u=s.segments[0].values[0];e.moveTo(u.x*a,u.y*a);for(const l of s.segments){const s=l.values[0],u=1,v=2,r=3;switch(l.type){case"line":e.lineTo(s.x*a,s.y*a);break;case"bezier":e.bezierCurveTo(l.values[u].x*a,l.values[u].y*a,l.values[v].x*a,l.values[v].y*a,l.values[r].x*a,l.values[r].y*a);break;case"quadratic":e.quadraticCurveTo(l.values[u].x*a,l.values[u].y*a,l.values[v].x*a,l.values[v].y*a);break;case"arc":e.arc(s.x*a,s.y*a,l.values[u].x*a,l.values[v].x,l.values[v].y);break;case"ellipse":e.ellipse(s.x*a,s.y*a,l.values[u].x*a,l.values[u].y*a,l.values[v].x,l.values[r].x,l.values[r].y)}}if(!s.half)return;for(let l=s.segments.length-1;l>=0;l--){const u=s.segments[l],v=u.values[0],r=1,c=2;switch(u.type){case"line":e.lineTo(v.x*-a,v.y*a);break;case"bezier":e.bezierCurveTo(-u.values[c].x*a,u.values[c].y*a,-u.values[r].x*a,u.values[r].y*a,v.x*a,v.y*a);break;case"quadratic":e.quadraticCurveTo(-u.values[r].x*a,u.values[r].y*a,-u.values[c].x*a,u.values[c].y*a)}}}s.d(a,{drawPath:()=>u})}}]);
//# sourceMappingURL=2739.ca95daa2.chunk.js.map