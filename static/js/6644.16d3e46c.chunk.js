"use strict";(self.webpackChunkfacerecognitionbrain=self.webpackChunkfacerecognitionbrain||[]).push([[6644],{6644:(s,t,n)=>{n.d(t,{EmittersPolygonShapeGenerator:()=>a});var e=n(3532),i=n(4409);const o=2*Math.PI;function r(s,t,n){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i=[],r=o/t;for(let o=0;o<t;o++){const t=r*o+e;i.push({x:s.x+n*Math.cos(t),y:s.y+n*Math.sin(t)})}return i}function l(s,t){let n=!1;for(let e=0,i=t.length-1;e<t.length;i=e++){const o=t[e],r=t[i];o.y>s.y!==r.y>s.y&&s.x<(r.x-o.x)*(s.y-o.y)/(r.y-o.y)+o.x&&(n=!n)}return n}class h extends e.B{constructor(s,t,n,e){super(s,t,n,e),this.sides=e.sides,this.angle=(0,i.pu)(e.angle),this.polygon=r(s,this.sides,.5*t.width,this.angle)}async init(){}async randomPosition(){const s=this.fill,t=this.polygon,n=s?function(s){const t=s[0],n={...t},e={...t};for(const i of s)i.x<n.x&&(n.x=i.x),i.x>e.x&&(e.x=i.x),i.y<n.y&&(n.y=i.y),i.y>e.y&&(e.y=i.y);let o=null;for(let r=0;r<100;r++){const t={x:n.x+(0,i.G0)()*(e.x-n.x),y:n.y+(0,i.G0)()*(e.y-n.y)};if(l(t,s)){o=t;break}}return o}(t):function(s){const t=Math.floor((0,i.G0)()*s.length),n=s[t],e=s[(t+1)%s.length],o=(0,i.G0)();return{x:n.x+(e.x-n.x)*o,y:n.y+(e.y-n.y)*o}}(t);return Promise.resolve(n?{position:n}:null)}resize(s,t){super.resize(s,t),this.polygon=r(s,this.sides,.5*t.width,this.angle)}}class c{constructor(){this.angle=0,this.sides=5}load(s){s&&(void 0!==s.angle&&(this.angle=s.angle),void 0!==s.sides&&(this.sides=s.sides))}}class a{generate(s,t,n,e){const i=new c;return i.load(e),new h(s,t,n,i)}}},3532:(s,t,n)=>{n.d(t,{B:()=>e});class e{constructor(s,t,n,e){this.position=s,this.size=t,this.fill=n,this.options=e}resize(s,t){this.position=s,this.size=t}}}}]);
//# sourceMappingURL=6644.16d3e46c.chunk.js.map