"use strict";(self.webpackChunkfacerecognitionbrain=self.webpackChunkfacerecognitionbrain||[]).push([[2330],{2330:(i,e,n)=>{n.d(e,{InfectionPlugin:()=>a});var t=n(4409);class o{constructor(){this.color=new t.Oi,this.color.value="#ff0000",this.radius=0,this.rate=1}load(i){void 0!==i&&(void 0!==i.color&&(this.color=t.Oi.create(this.color,i.color)),this.duration=i.duration,this.infectedStage=i.infectedStage,void 0!==i.radius&&(this.radius=i.radius),void 0!==i.rate&&(this.rate=i.rate))}}class s{constructor(){this.cure=!1,this.delay=0,this.enable=!1,this.infections=0,this.stages=[]}load(i){void 0!==i&&(void 0!==i.cure&&(this.cure=i.cure),void 0!==i.delay&&(this.delay=i.delay),void 0!==i.enable&&(this.enable=i.enable),void 0!==i.infections&&(this.infections=i.infections),void 0!==i.stages&&(this.stages=i.stages.map((i=>{const e=new o;return e.load(i),e}))))}}class a{constructor(){this.id="infection"}async getPlugin(i){const{InfectionInstance:e}=await n.e(8918).then(n.bind(n,8918));return new e(i)}loadOptions(i,e){var n;if(!this.needsPlugin(i)&&!this.needsPlugin(e))return;let t=i.infection;void 0===(null===(n=t)||void 0===n?void 0:n.load)&&(i.infection=t=new s),t.load(null===e||void 0===e?void 0:e.infection)}needsPlugin(i){var e,n;return null!==(e=null===i||void 0===i||null===(n=i.infection)||void 0===n?void 0:n.enable)&&void 0!==e&&e}}}}]);
//# sourceMappingURL=2330.e3aa9805.chunk.js.map