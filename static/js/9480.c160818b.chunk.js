"use strict";(self.webpackChunkfacerecognitionbrain=self.webpackChunkfacerecognitionbrain||[]).push([[9480],{9480:(e,i,o)=>{o.d(i,{TwinkleUpdater:()=>a});var t=o(4409);class n{constructor(){this.enable=!1,this.frequency=.05,this.opacity=1}load(e){e&&(void 0!==e.color&&(this.color=t.Oi.create(this.color,e.color)),void 0!==e.enable&&(this.enable=e.enable),void 0!==e.frequency&&(this.frequency=e.frequency),void 0!==e.opacity&&(this.opacity=(0,t.DT)(e.opacity)))}}class s{constructor(){this.lines=new n,this.particles=new n}load(e){e&&(this.lines.load(e.lines),this.particles.load(e.particles))}}class a{getColorStyles(e,i,o,n){const s=e.options.twinkle;if(!s)return{};const a=s.particles,l=a.enable&&(0,t.G0)()<a.frequency,r=e.options.zIndex,c=(1-e.zIndexFactor)**r.opacityRate,d=l?(0,t.VG)(a.opacity)*c:n,p=(0,t.R5)(a.color),h=p?(0,t.LC)(p,d):void 0,u={},w=l&&h;return u.fill=w?h:void 0,u.stroke=w?h:void 0,u}async init(){await Promise.resolve()}isEnabled(e){const i=e.options.twinkle;return!!i&&i.particles.enable}loadOptions(e){e.twinkle||(e.twinkle=new s);for(var i=arguments.length,o=new Array(i>1?i-1:0),t=1;t<i;t++)o[t-1]=arguments[t];for(const n of o)e.twinkle.load(null===n||void 0===n?void 0:n.twinkle)}async update(){await Promise.resolve()}}}}]);
//# sourceMappingURL=9480.c160818b.chunk.js.map